package ${package}.${moduleName}.controller;

import ${package}.${moduleName}.common.utils.ApiResult;
import ${package}.${moduleName}.common.utils.DateUtils;
import ${package}.${moduleName}.common.xss.SQLFilter;
import ${package}.${moduleName}.dto.repose.${className}Rep;
import ${package}.${moduleName}.dto.request.${className}AddReq;
import ${package}.${moduleName}.dto.request.${className}ModifyReq;
import ${package}.${moduleName}.entity.${className}Bean;
import ${package}.${moduleName}.service.${className}Service;

import com.github.pagehelper.PageInfo;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.*;
import tk.mybatis.mapper.entity.Example;
import java.util.ArrayList;
import java.util.List;

/**
 * ${comments}
 * 
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${pathName}")
public class ${className}Controller {
	@Autowired
	private ${className}Service ${classname}Service;


    @ApiOperation(value = "新增")
    @RequestMapping(value = "/create", method = RequestMethod.POST)
    public ApiResult create(${className}AddReq data)
    {
			${className}Bean entity=new ${className}Bean();

			${classname}Service.insert(entity);
			return ApiResult.Success("操作成功!");
    }

    @ApiOperation(value = "修改")
    @RequestMapping(value = "/modify", method = RequestMethod.POST)
    public  ApiResult modify(${className}ModifyReq data)
    {
        Example example = new Example(${className}Bean.class);
        example.createCriteria().andEqualTo("${pk.attrname}",data.Id);
        UsersBean entity=userService.queryOneByExample(example);



			${classname}Service.updateByPrimaryKey(entity);
        return ApiResult.Success("操作成功!");
    }


    @ApiOperation(value = "删除")
    @RequestMapping(value = "/del", method = RequestMethod.GET)
    public ApiResult del(${pk.attrType} id)
    {
			${classname}Service.deleteByPrimaryKey(id);
        return ApiResult.Success("删除成功!");
    }

    @ApiOperation(value = "获取单条")
    @RequestMapping(value = "/info", method = RequestMethod.GET)
    public  ApiResult info(${pk.attrType} id)
    {
        Example example = new Example(${className}Bean.class);
        example.createCriteria().andEqualTo("${pk.attrname}",data.Id);
        UsersBean entity= ${classname}Service.queryOneByExample(example);
        return ApiResult.Success(entity);
    }

    @ApiOperation(value = "分页获取")
    @RequestMapping(value = "/list",method = RequestMethod.GET,produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiImplicitParams(
            {
                    @ApiImplicitParam(paramType = "query", name = "page", value = "第几页", dataType = "String"),
                    @ApiImplicitParam(paramType ="query", name = "size", value = "每页显示条数", dataType = "String")
            })
    @ResponseBody()
    public ApiResult<List<${className}Rep>> GetUserList(
            @RequestParam(required = false,defaultValue = "1") Integer page,
            @RequestParam(required = false,defaultValue = "15") Integer size) {

        Example example = new Example(${className}Bean.class);
        Example.Criteria criteria = example.createCriteria();

        PageInfo<UsersBean> pageInfo = userService.queryPageListByExample(example,page,size);

        List<UserRep> list = new ArrayList<>();
        for(UsersBean bean:pageInfo.getList())
        {
				${className}Rep item = new ${className}Rep();
            BeanUtils.copyProperties(bean,item);
            list.add(item);
        }

        return ApiResult.Success(pageInfo.getTotal(),list);
    }
}
